name: build

on:
    push:
        tags:
            - "**"

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      # target: spek-rs-linux
                    - os: macos-15-intel
                      target: spek-rs-macos-amd64.app # Intel macOS
                    - os: macos-latest
                      target: spek-rs-macos-arm64.app # Apple Silicon macOS
                    - os: windows-latest
                      # target: spek-rs-windows

        permissions:
            contents: write

        steps:
            - uses: actions/checkout@v4

            - uses: dtolnay/rust-toolchain@stable

            - name: Install Ubuntu dependencies
              if: runner.os == 'Linux'
              run: |
                  echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
                  sudo add-apt-repository -y universe
                  sudo apt-get -y update
                  sudo apt-get install -y libdbus-1-dev pkg-config nfpm libfuse2 libfontconfig1-dev
              env:
                  DEBIAN_FRONTEND: noninteractive

            - name: Install appimagetool
              if: runner.os == 'Linux'
              run: |
                  wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage
                  chmod +x appimagetool-x86_64.AppImage
                  sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool

            - name: Build
              run: |
                  cargo build --release

            - name: Create .deb package
              if: runner.os == 'Linux'
              working-directory: packaging
              run: |
                  nfpm package --packager deb --config nfpm.yaml --target spek-rs.deb

            - name: Create .rpm package
              if: runner.os == 'Linux'
              working-directory: packaging
              run: |
                  nfpm package --packager rpm --config nfpm.yaml --target spek-rs.rpm

            - name: Create .AppImage package
              if: runner.os == 'Linux'
              run: |
                  cargo install cargo-appimage
                  cp assets/icon.png icon.png
                  cargo appimage

            - name: Create macOS .app package
              if: runner.os == 'macOS'
              run: |
                  cargo install cargo-bundle
                  cargo bundle --release
                  mv target/release/bundle/osx/Spek-rs.app target/release/${{ matrix.target }}

            - name: Create Windows installer
              if: runner.os == 'Windows'
              run: |
                  cargo install cargo-wix
                  cargo wix --no-build --target-bin-dir target\release --output target\release\spek-rs.msi --include packaging\wix\main.wxs --nocapture
                  ren "target\release\spek-rs.exe" "spek-rs-portable.exe"

            - name: GH Release (Linux)
              if: startsWith(github.ref, 'refs/tags/') || runner.os == 'Linux'
              uses: softprops/action-gh-release@2.4.1
              with:
                  body_path: .github/release-notes.md
                  files: |
                      packaging/spek-rs.deb
                      packaging/spek-rs.rpm
                      target/appimage/spek-rs.AppImage
                      target/release/spek-rs

            - name: GH Release (Windows)
              if: startsWith(github.ref, 'refs/tags/') || runner.os == 'Windows'
              uses: softprops/action-gh-release@2.4.1
              with:
                  body_path: .github\release-notes.md
                  files: |
                      target\release\spek-rs.msi
                      target\release\spek-rs-portable.exe

            - name: GH Release (macOS)
              if: startsWith(github.ref, 'refs/tags/') || runner.os == 'macOS'
              uses: softprops/action-gh-release@2.4.1
              with:
                  body_path: .github/release-notes.md
                  files: |
                      target/release/${{ matrix.target }}
